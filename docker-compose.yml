
services:
  nginx:
    container_name: app_nginx
    restart: always
    image: nginx:latest
    ports:
    - ${PORT}:80
    volumes:
    - ./nginx.conf.template:/etc/nginx/templates/nginx.conf.template
    - ./entrypoint.sh:/docker-entrypoint.d/entrypoint.sh
    - nginx_logs:/var/log/nginx
    entrypoint: ["/docker-entrypoint.d/entrypoint.sh"]
    env_file:
      - ./.env
    depends_on:
      - blue
      - green
    networks:
    - net

  blue:
    container_name: app_blue
    restart: on-failure
    image: ${BLUE_IMAGE}
    ports:
    - 8081:${PORT}
    env_file:
      - ./.env
    environment:
    - APP_POOL=blue
    - RELEASE_ID=${RELEASE_ID_BLUE}
    networks:
    - net

  green:
    container_name: app_green
    restart: on-failure
    image: ${GREEN_IMAGE}
    ports:
    - 8082:${PORT}
    env_file:
      - ./.env
    environment:
    - APP_POOL=green
    - RELEASE_ID=${RELEASE_ID_GREEN}
    networks:
    - net

  watcher:
    build: ./watcher
    volumes:
      - nginx_logs:/var/log/nginx
    env_file: ./.env
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD}
      - WINDOW_SIZE=${WINDOW_SIZE}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC}
    depends_on:
      - nginx
    networks:
      - net
  
networks:
  net:
    driver: bridge

volumes:
  nginx_logs:
  



  




